{"version":3,"sources":["webpack:///./src/templates/blog-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/avatar.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","className","date","dangerouslySetInnerHTML","__html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","react_default","gatsby_browser_entry","to","src","logo","alt","Footer","fullyear","Date","getFullYear","Layout","components_header","siteTitle","style","margin","maxWidth","padding","paddingTop","components_footer","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-template-js-9577498f4095c2fdd44d.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport '../styles/blog.css'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <p className=\"date\">{frontmatter.date}</p>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/avatar-c09b78756730f7f3bea995ee2a10cb08.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../styles/header.css'\nimport logo from '../images/avatar.png'\n\nconst Header = () => (\n  <header className=\"site-header\">\n    <Link to={`/`} className=\"logo-link\">\n      <img className=\"logo\" src={logo} alt=\"\" />\n    </Link>\n\n    <ul className=\"navigator\">\n      <li>\n        <Link to={`/blog`}>Blog</Link>\n      </li>\n      <li>\n        <Link to={`/about`}>About</Link>\n      </li>\n    </ul>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport '../styles/footer.css'\n\nconst Footer = () => {\n  const fullyear = new Date().getFullYear()\n  return <footer className=\"site-footer\">&copy; {fullyear} imfer.me</footer>\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport '../styles/layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}