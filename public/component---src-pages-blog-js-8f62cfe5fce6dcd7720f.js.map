{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/avatar.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","BlogIndexPage","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Posts","_ref","list","a","createElement","className","map","_ref2","_ref2$node","node","frontmatter","id","title","date","path","key","to","_ref3","edges","data","allMarkdownRemark","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","react_default","gatsby_browser_entry","src","logo","alt","Footer","fullyear","Date","getFullYear","Layout","components_header","siteTitle","style","margin","maxWidth","padding","paddingTop","components_footer","_755544856"],"mappings":"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","file":"component---src-pages-blog-js-8f62cfe5fce6dcd7720f.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport '../styles/blog.css'\n\nfunction Posts({ list }) {\n  return (\n    <ul className=\"blog-list-container\">\n      {list.map(({ node: { frontmatter, id } }) => {\n        const { title, date, path } = frontmatter\n        return (\n          <li key={id}>\n            <Link to={path} className=\"title\">\n              {title}\n            </Link>\n            <span className=\"date\">{date}</span>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default function BlogIndexPage({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  return (\n    <Layout>\n      <SEO title=\"博客列表\" />\n      <h2>博客</h2>\n      <Posts list={edges} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/avatar-c09b78756730f7f3bea995ee2a10cb08.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../styles/header.css'\nimport logo from '../images/avatar.png'\n\nconst Header = () => (\n  <header className=\"site-header\">\n    <Link to={`/`} className=\"logo-link\">\n      <img className=\"logo\" src={logo} alt=\"\" />\n    </Link>\n\n    <ul className=\"navigator\">\n      <li>\n        <Link to={`/blog`}>Blog</Link>\n      </li>\n      <li>\n        <Link to={`/about`}>About</Link>\n      </li>\n    </ul>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport '../styles/footer.css'\n\nconst Footer = () => {\n  const fullyear = new Date().getFullYear()\n  return <footer className=\"site-footer\">&copy; {fullyear} imfer.me</footer>\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport '../styles/layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}